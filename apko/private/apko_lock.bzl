""""""

load("//apko/private:apko_run.bzl", "apko_run")

def apko_lock(name, config, lockfile_name):
    """Generates executable rule for producing apko lock files.

    When run, the rule will output the lockfile to the lockfilename in the directory of the package where the rule is defined.
    That is, if you define `apko_lock` in `foo/bar/BUILD.bazel` with `lockfile_name="baz.lock.json` the rule will output the lock into
    `foo/bar/baz.lock.json`.

    Args:
        name: name of the rule,
        config: label of the apko yaml config file (Either in source directory or generated by Bazel).
        lockfile_name: name of the lockfile
    """
    config_label = native.package_relative_label(config)

    package_prefix = config_label.package + "/" if config_label.package else ""
    apko_run(
        name = name,
        # args is subject to make variables substitution: https://bazel.build/reference/be/common-definitions#common-attributes-binaries
        args = ["lock", "$(execpath {})".format(config), "--output={}{}".format(package_prefix, lockfile_name)],
        workdir = "workspace",
        data = [config],
    )
