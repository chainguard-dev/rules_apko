# Cut a release whenever a new tag is pushed to the repo.
# You should use an annotated tag, like `git tag -a v1.2.3`
# and put the release notes into the commit message for the tag.
name: Release

on:
  schedule:
    - cron: '30 10 * * 1' # every Monday at 00:00 UTC
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions:
  id-token: write
  contents: write
  attestations: write

jobs:
  gh-release:
    permissions:
      id-token: write
      contents: write
      attestations: write
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.check.outputs.existing_tag || steps.create_tag.outputs.new_tag }}
    steps:
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: smallstep/action-install-step-cli@b2bcb7fdcf0d6362d454b56879e531bf44eccb11
      - run: |
          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=testdonotuse" | jq -r '.value' | step crypto jwt inspect --insecure

      - uses: octo-sts/action@e480437973a6f6ac2e9caa40ecabedc870d76395 # v1.0.1
        id: octo-sts
        with:
          scope: ${{ github.repository }}
          identity: release

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # fetch all history for all branches and tags
          token: ${{ steps.octo-sts.outputs.token }}

      - name: Check if any changes since last release
        id: check
        env:
          GH_TOKEN: ${{ steps.octo-sts.outputs.token }}
        run: |
          TAG=$(git tag --points-at HEAD)
          if [ -z "$TAG" ]; then
            echo "No tag points at HEAD, so we need a new tag and then a new release."
            echo "need_release=yes" >> $GITHUB_OUTPUT
          else
            RELEASE=$(gh release view "$TAG" --json tagName --jq '.tagName' || echo "none")
            if [ "$RELEASE" == "$TAG" ]; then
              echo "A release exists for tag $TAG, which has the latest changes, so no need for a new tag or release."
              echo "need_release=no" >> $GITHUB_OUTPUT
            else
              echo "Tag $TAG exists, but no release is associated. Need a new release."
              echo "need_release=yes" >> $GITHUB_OUTPUT
              echo "existing_tag=$TAG" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Bump version and push tag
        id: create_tag
        uses: chainguard-dev/actions/git-tag@cd899cc96227b82170571cad1c3d6378d8cba678 # v1.4.15
        if: steps.check.outputs.need_release == 'yes' && steps.check.outputs.existing_tag == ''
        with:
          token: ${{ steps.octo-sts.outputs.token }}
          author: "octo-sts[bot] <157150467+octo-sts[bot]@users.noreply.github.com>"
          committer: "octo-sts[bot] <157150467+octo-sts[bot]@users.noreply.github.com>"
          bump_level: 'patch'

  bcr-release:
    needs: gh-release
    uses: bazel-contrib/.github/.github/workflows/release_ruleset.yaml@a841d62420f41a87a601fb331f3c2c2cc088506e # v7.2.3
    with:
      prerelease: false
      release_files: rules_apko-*.tar.gz
      tag_name: ${{needs.gh-release.output.tag_name}}
